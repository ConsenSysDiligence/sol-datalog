// Compute whether a state var with a given id is modified in a LHS expression
.decl stateVarModifiedInLHS(varId: id, exprId: id)

// Simple reference to the variable
stateVarModifiedInLHS(varId, exprId) :-
    Identifier(exprId),
    Identifier_referencedDeclaration(exprId, varId).

// A member access referring to the variable (e.g. this.x, Foo.x)
stateVarModifiedInLHS(varId, exprId) :-
    MemberAccess(exprId),
    MemberAccess_referencedDeclaration(exprId, varId).

// A struct member access x.foo
stateVarModifiedInLHS(varId, exprId) :-
    MemberAccess(exprId),
    MemberAccess_expression(exprId, subExprId),
    stateVarModifiedInLHS(varId, subExprId).

// An index into the state var x[a]
stateVarModifiedInLHS(varId, exprId) :-
    IndexAccess(exprId),
    IndexAccess_baseExpression(exprId, baseExprId),
    stateVarModifiedInLHS(varId, baseExprId).
 
// An tuple expression
stateVarModifiedInLHS(varId, exprId) :-
    TupleExpression(exprId), 
    TupleExpression_isInlineArray(exprId, 0),
    TupleExpression_components(exprId, componentId, _, _),
    componentId >= 0,
    stateVarModifiedInLHS(varId, componentId).

// Compute whether the state var identifier by varId is mutated in the assignment identified by assignmentId
.decl varModifiedInLHSOfAssignment(varId: id, assignmentId: id)

// Simple assignment case
varModifiedInLHSOfAssignment(varId, assignmentId) :-
    Assignment(assignmentId),
    Assignment_leftHandSide(assignmentId, lhsId),
    stateVarModifiedInLHS(varId, lhsId).

// Compute whether the state var "varContractName.stateVarName" is changed  inside the method "funContractName.funName"
.decl stateVarAssignedIn(varContractName: symbol, stateVarName: symbol, funContractName: symbol, funName: symbol)

stateVarAssignedIn(varContractName, stateVarName, funContractName, funName) :-
    contract(varContractId, varContractName),
    contract(funContractId, funContractName),
    stateVar(sId, stateVarName),
    ancestor(varContractId, sId),
    function(fId, funName),
    ancestor(funContractId, fId),
    Assignment(assignId),
    ancestor(fId, assignId),
    varModifiedInLHSOfAssignment(sId, assignId).