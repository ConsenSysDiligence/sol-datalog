// Helper relation to establish a relation is BOTH modified and read.
// Includes:
//      - +=, -= ...
//      - ++/--
//      - calls to .push and .pop (the length must first be read to be incremented/decremented)
.decl LRValue(id: ExpressionId)

// === Top-level cases:
// Assignment lhs
LRValue(x) :-
    Assignment_leftHandSide(aId, x),
    Assignment_operator(aId, op),
    (match(".=", op);
     match("..=", op)).

LRValue(x) :-
    UnaryOperation_operator(x, "++");
    UnaryOperation_operator(x, "--").

LRValue(x) :-
    FunctionCall_expression(_, callee),
    (MemberAccess_memberName(callee, "push");
    MemberAccess_memberName(callee, "pop")),
    MemberAccess_expression(callee, x).
    
// === Inductive cases
LRValue(x) :-
    MemberAccess_expression(y, x),
    LRValue(y).

LRValue(x) :-
    IndexAccess_baseExpression(y, x),
    LRValue(y).

LRValue(x) :-
    TupleExpression_components(y, x, _, _),
    LRValue(y).